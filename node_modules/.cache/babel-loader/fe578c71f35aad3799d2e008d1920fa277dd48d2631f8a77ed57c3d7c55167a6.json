{"ast":null,"code":"var _jsxFileName = \"/Users/borisd/Private/Lets Do It Wheater App/weather-app/src/components/LocationButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchWeather } from '../features/currentWeatherSlice';\nimport { fetchLocationKeyByCoordinates } from '../api/weatherApi';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationButton = () => {\n  _s();\n  const dispatch = useDispatch();\n  const handleLocationClick = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          const locationKey = await fetchLocationKeyByCoordinates(latitude, longitude);\n          if (!locationKey) {\n            toast.error('Could not find location data');\n            return;\n          }\n\n          // Dispatch actions to fetch weather and forecast based on location key\n          await dispatch(fetchWeather(locationKey)).unwrap();\n          await dispatch(fetchForecast(locationKey)).unwrap();\n          toast.success('Weather data for current location loaded');\n        } catch (error) {\n          console.error(\"Failed to fetch weather for location:\", error);\n          toast.error('Failed to fetch weather data.');\n        }\n      }, () => {\n        toast.error('Unable to retrieve location.');\n      });\n    } else {\n      toast.error('Geolocation is not supported by this browser.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLocationClick,\n    children: \"My Location\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationButton, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = LocationButton;\nexport default LocationButton;\nvar _c;\n$RefreshReg$(_c, \"LocationButton\");","map":{"version":3,"names":["React","useDispatch","fetchWeather","fetchLocationKeyByCoordinates","toast","jsxDEV","_jsxDEV","LocationButton","_s","dispatch","handleLocationClick","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","locationKey","error","unwrap","fetchForecast","success","console","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/borisd/Private/Lets Do It Wheater App/weather-app/src/components/LocationButton.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchWeather } from '../features/currentWeatherSlice';\nimport { fetchLocationKeyByCoordinates } from '../api/weatherApi';\nimport toast from 'react-hot-toast';\n\nconst LocationButton = () => {\n  const dispatch = useDispatch();\n\n  const handleLocationClick = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const { latitude, longitude } = position.coords;\n\n          try {\n            const locationKey = await fetchLocationKeyByCoordinates(latitude, longitude);\n            if (!locationKey) {\n              toast.error('Could not find location data');\n              return;\n            }\n\n            // Dispatch actions to fetch weather and forecast based on location key\n            await dispatch(fetchWeather(locationKey)).unwrap();\n            await dispatch(fetchForecast(locationKey)).unwrap();\n            toast.success('Weather data for current location loaded');\n          } catch (error) {\n            console.error(\"Failed to fetch weather for location:\", error);\n            toast.error('Failed to fetch weather data.');\n          }\n        },\n        () => {\n          toast.error('Unable to retrieve location.');\n        }\n      );\n    } else {\n      toast.error('Geolocation is not supported by this browser.');\n    }\n  };\n\n  return (\n    <button onClick={handleLocationClick}>\n      My Location\n    </button>\n  );\n};\n\nexport default LocationButton;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,6BAA6B,QAAQ,mBAAmB;AACjE,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,MAAOC,QAAQ,IAAK;QAClB,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAE/C,IAAI;UACF,MAAMC,WAAW,GAAG,MAAMf,6BAA6B,CAACY,QAAQ,EAAEC,SAAS,CAAC;UAC5E,IAAI,CAACE,WAAW,EAAE;YAChBd,KAAK,CAACe,KAAK,CAAC,8BAA8B,CAAC;YAC3C;UACF;;UAEA;UACA,MAAMV,QAAQ,CAACP,YAAY,CAACgB,WAAW,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC;UAClD,MAAMX,QAAQ,CAACY,aAAa,CAACH,WAAW,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC;UACnDhB,KAAK,CAACkB,OAAO,CAAC,0CAA0C,CAAC;QAC3D,CAAC,CAAC,OAAOH,KAAK,EAAE;UACdI,OAAO,CAACJ,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;UAC7Df,KAAK,CAACe,KAAK,CAAC,+BAA+B,CAAC;QAC9C;MACF,CAAC,EACD,MAAM;QACJf,KAAK,CAACe,KAAK,CAAC,8BAA8B,CAAC;MAC7C,CACF,CAAC;IACH,CAAC,MAAM;MACLf,KAAK,CAACe,KAAK,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC;EAED,oBACEb,OAAA;IAAQkB,OAAO,EAAEd,mBAAoB;IAAAe,QAAA,EAAC;EAEtC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACrB,EAAA,CAvCID,cAAc;EAAA,QACDN,WAAW;AAAA;AAAA6B,EAAA,GADxBvB,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}