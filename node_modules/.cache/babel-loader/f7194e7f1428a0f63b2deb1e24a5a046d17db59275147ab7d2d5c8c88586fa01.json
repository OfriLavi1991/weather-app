{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{fetchCurrentWeather}from'../api/weatherApi';import toast from'react-hot-toast';// הוספת toast\nexport const fetchWeather=createAsyncThunk('weather/fetchWeather',async locationKey=>{const weather=await fetchCurrentWeather(locationKey);return weather;});const currentWeatherSlice=createSlice({name:'currentWeather',initialState:{data:null,status:'idle',error:null},reducers:{},extraReducers:builder=>{builder.addCase(fetchWeather.pending,state=>{state.status='loading';}).addCase(fetchWeather.fulfilled,(state,action)=>{state.status='succeeded';state.data=action.payload;}).addCase(fetchWeather.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;toast.error('Failed to load current weather');// הודעת שגיאה ב-toast\n});}});export default currentWeatherSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchCurrentWeather","toast","fetchWeather","locationKey","weather","currentWeatherSlice","name","initialState","data","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/borisd/Private/Lets Do It Wheater App/weather-app/src/features/currentWeatherSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchCurrentWeather } from '../api/weatherApi';\r\nimport toast from 'react-hot-toast'; // הוספת toast\r\n\r\nexport const fetchWeather = createAsyncThunk('weather/fetchWeather', async (locationKey) => {\r\n  const weather = await fetchCurrentWeather(locationKey);\r\n  return weather;\r\n});\r\n\r\nconst currentWeatherSlice = createSlice({\r\n  name: 'currentWeather',\r\n  initialState: {\r\n    data: null,\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchWeather.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchWeather.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchWeather.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n        toast.error('Failed to load current weather'); // הודעת שגיאה ב-toast\r\n      });\r\n  },\r\n});\r\n\r\nexport default currentWeatherSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,OAASC,mBAAmB,KAAQ,mBAAmB,CACvD,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CAAE;AAErC,MAAO,MAAM,CAAAC,YAAY,CAAGH,gBAAgB,CAAC,sBAAsB,CAAE,KAAO,CAAAI,WAAW,EAAK,CAC1F,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAJ,mBAAmB,CAACG,WAAW,CAAC,CACtD,MAAO,CAAAC,OAAO,CAChB,CAAC,CAAC,CAEF,KAAM,CAAAC,mBAAmB,CAAGP,WAAW,CAAC,CACtCQ,IAAI,CAAE,gBAAgB,CACtBC,YAAY,CAAE,CACZC,IAAI,CAAE,IAAI,CACVC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,IACT,CAAC,CACDC,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAACZ,YAAY,CAACa,OAAO,CAAGC,KAAK,EAAK,CACxCA,KAAK,CAACP,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDK,OAAO,CAACZ,YAAY,CAACe,SAAS,CAAE,CAACD,KAAK,CAAEE,MAAM,GAAK,CAClDF,KAAK,CAACP,MAAM,CAAG,WAAW,CAC1BO,KAAK,CAACR,IAAI,CAAGU,MAAM,CAACC,OAAO,CAC7B,CAAC,CAAC,CACDL,OAAO,CAACZ,YAAY,CAACkB,QAAQ,CAAE,CAACJ,KAAK,CAAEE,MAAM,GAAK,CACjDF,KAAK,CAACP,MAAM,CAAG,QAAQ,CACvBO,KAAK,CAACN,KAAK,CAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO,CAClCpB,KAAK,CAACS,KAAK,CAAC,gCAAgC,CAAC,CAAE;AACjD,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,cAAe,CAAAL,mBAAmB,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}