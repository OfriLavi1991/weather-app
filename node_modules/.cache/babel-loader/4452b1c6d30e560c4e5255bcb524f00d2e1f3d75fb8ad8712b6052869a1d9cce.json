{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{fetchCitySuggestions}from'../api/weatherApi';import toast from'react-hot-toast';// הוספת toast\nexport const fetchCities=createAsyncThunk('cities/fetchCities',async query=>{const cities=await fetchCitySuggestions(query);return cities;});const citySlice=createSlice({name:'cities',initialState:{suggestions:[],status:'idle',error:null},reducers:{},extraReducers:builder=>{builder.addCase(fetchCities.pending,state=>{state.status='loading';}).addCase(fetchCities.fulfilled,(state,action)=>{state.status='succeeded';state.suggestions=action.payload;}).addCase(fetchCities.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;toast.error('Failed to load city suggestions');// הודעת שגיאה ב-toast\n});}});export default citySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchCitySuggestions","toast","fetchCities","query","cities","citySlice","name","initialState","suggestions","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/borisd/Private/Lets Do It Wheater App/weather-app/src/features/citySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchCitySuggestions } from '../api/weatherApi';\r\nimport toast from 'react-hot-toast'; // הוספת toast\r\n\r\nexport const fetchCities = createAsyncThunk('cities/fetchCities', async (query) => {\r\n  const cities = await fetchCitySuggestions(query);\r\n  return cities;\r\n});\r\n\r\nconst citySlice = createSlice({\r\n  name: 'cities',\r\n  initialState: {\r\n    suggestions: [],\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCities.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchCities.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.suggestions = action.payload;\r\n      })\r\n      .addCase(fetchCities.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n        toast.error('Failed to load city suggestions'); // הודעת שגיאה ב-toast\r\n      });\r\n  },\r\n});\r\n\r\nexport default citySlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,OAASC,oBAAoB,KAAQ,mBAAmB,CACxD,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CAAE;AAErC,MAAO,MAAM,CAAAC,WAAW,CAAGH,gBAAgB,CAAC,oBAAoB,CAAE,KAAO,CAAAI,KAAK,EAAK,CACjF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAJ,oBAAoB,CAACG,KAAK,CAAC,CAChD,MAAO,CAAAC,MAAM,CACf,CAAC,CAAC,CAEF,KAAM,CAAAC,SAAS,CAAGP,WAAW,CAAC,CAC5BQ,IAAI,CAAE,QAAQ,CACdC,YAAY,CAAE,CACZC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,IACT,CAAC,CACDC,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAACZ,WAAW,CAACa,OAAO,CAAGC,KAAK,EAAK,CACvCA,KAAK,CAACP,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDK,OAAO,CAACZ,WAAW,CAACe,SAAS,CAAE,CAACD,KAAK,CAAEE,MAAM,GAAK,CACjDF,KAAK,CAACP,MAAM,CAAG,WAAW,CAC1BO,KAAK,CAACR,WAAW,CAAGU,MAAM,CAACC,OAAO,CACpC,CAAC,CAAC,CACDL,OAAO,CAACZ,WAAW,CAACkB,QAAQ,CAAE,CAACJ,KAAK,CAAEE,MAAM,GAAK,CAChDF,KAAK,CAACP,MAAM,CAAG,QAAQ,CACvBO,KAAK,CAACN,KAAK,CAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO,CAClCpB,KAAK,CAACS,KAAK,CAAC,iCAAiC,CAAC,CAAE;AAClD,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,cAAe,CAAAL,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}