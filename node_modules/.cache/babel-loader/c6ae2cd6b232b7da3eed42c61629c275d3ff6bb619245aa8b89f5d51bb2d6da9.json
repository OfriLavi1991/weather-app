{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchCitySuggestions } from '../api/weatherApi';\nimport toast from 'react-hot-toast'; // הוספת toast\n\nexport const fetchCities = createAsyncThunk('cities/fetchCities', async query => {\n  const cities = await fetchCitySuggestions(query);\n  return cities;\n});\nconst citySlice = createSlice({\n  name: 'cities',\n  initialState: {\n    suggestions: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCities.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCities.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.suggestions = action.payload;\n    }).addCase(fetchCities.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n      toast.error('Failed to load city suggestions'); // הודעת שגיאה ב-toast\n    });\n  }\n});\nexport default citySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchCitySuggestions","toast","fetchCities","query","cities","citySlice","name","initialState","suggestions","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/borisd/Private/Lets Do It Wheater App/weather-app/src/features/citySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchCitySuggestions } from '../api/weatherApi';\r\nimport toast from 'react-hot-toast'; // הוספת toast\r\n\r\nexport const fetchCities = createAsyncThunk('cities/fetchCities', async (query) => {\r\n  const cities = await fetchCitySuggestions(query);\r\n  return cities;\r\n});\r\n\r\nconst citySlice = createSlice({\r\n  name: 'cities',\r\n  initialState: {\r\n    suggestions: [],\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCities.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchCities.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.suggestions = action.payload;\r\n      })\r\n      .addCase(fetchCities.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n        toast.error('Failed to load city suggestions'); // הודעת שגיאה ב-toast\r\n      });\r\n  },\r\n});\r\n\r\nexport default citySlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD,OAAOC,KAAK,MAAM,iBAAiB,CAAC,CAAC;;AAErC,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,MAAOI,KAAK,IAAK;EACjF,MAAMC,MAAM,GAAG,MAAMJ,oBAAoB,CAACG,KAAK,CAAC;EAChD,OAAOC,MAAM;AACf,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,WAAW,CAACa,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACZ,WAAW,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,WAAW,GAAGU,MAAM,CAACC,OAAO;IACpC,CAAC,CAAC,CACDL,OAAO,CAACZ,WAAW,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;MAClCpB,KAAK,CAACS,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeL,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}